dist: trusty
sudo: required
language: bash

env:
  - tf_version=0.12.8

before_install:
#  - curl https://raw.githubusercontent.com/express42/otus-homeworks/2020-02/run.sh | bash
  - wget -P /tmp/ https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - wget -P /tmp/ https://releases.hashicorp.com/packer/1.5.5/packer_1.5.5_linux_amd64.zip
  - wget -P /tmp/ wget https://github.com/terraform-linters/tflint/releases/download/v0.15.4/tflint_darwin_amd64.zip
  - wget -P /tmp/ https://github.com/terraform-linters/tflint/releases/download/v0.15.4/tflint_darwin_amd64.zip  
  - sudo apt-get -y install unzip python3-pip
  - sudo pip install ansible-lint
#  - rm -rf ./terraform
#  - rm -rf ./packer
  - ls -la /tmp
  - unzip -o -d /tmp/  /tmp/terraform_"$tf_version"_linux_amd64.zip
  - unzip -o -d /tmp/ /tmp/packer_1.5.5_linux_amd64.zip
  - unzip -o -d /tmp/ /tmp/tflint_darwin_amd64.zip
  - sudo mc /tmp/tflint /usr/local/bin/
  - sudo mv /tmp/terraform /usr/local/bin/
  - sudo mv /tmp/packer /usr/local/bin/
  - sudo mv /tmp/tflint /usr/local/bin/
#  - rm terraform_"$tf_version"_linux_amd64.zip
#  - git clone https://github.com/Otus-DevOps-2020-02/ppavlov39_infra
  - ls -la
#  - cd ./ppavlov39_infra 
  - ls -la
  - terraform init ./terraform/prod/ 
  - terraform init ./terraform/stage/ 
  - terraform validate ./terraform/prod/ && if [ $? -ne 0 ] ; then echo  "PROD +++ " ; fi
  - terraform validate ./terraform/stage/ && if [ $? -ne 0 ] ; then echo  "STAGE +++ " ; fi
#  - cd ./packer
#  - ls -la
  - pwd
  - packer validate -var-file ./packer/variables.json.example ./packer/app.json
  - packer validate -var-file ./packer/variables.json.example ./packer/db.json
  - ansible-lint ./ansible/playbooks/*.yml

#branches:
#  only:
#    - master

notifications:
  slack:
    rooms:
      secure: Y0Sox0RckM8I2dfioa08kwEAs6c4PPwpRN9W0VDVPdr0p8oYdbDM9Lf+Xglc1NNUYl5J1Ry6QpQVLRQpHoIZpMYeZ9z0mcLHL4F6c8GtYENcDghYe4yeO7M3be69RXE7J5qm1PF9LZZCX2klozlq24aPvy6oBaXPRej8ALa4g0SpjK1zoDA4WVPMzyMnbWubqhPEcV1X7OyR6qPO5pyYemSBWcsA61pFpejW71k7x37kXBh58DDd+UQyvLNBRUtf+Vic80+8PuAkr7ZOb7/KU5v7maMtiwpLz+8Igktzi+FYXnTd/k+DPEqLCR4wQI+tgDdZBYoAl5Z6IvIUarQV7IKlC7it8XfJdrwsm3BQ4wfY6g5C9sie2jGKfOKVL1xW6beRq+nWjhibppN+HXteQGdHq8DPUcivLT3akrc+XkLOrFRCFoYPYwElmXACnOQuOzvCgvpyNyp7Uo/34QJfmfr2qGLob7clO0YMcH1YFJa36vVNW1ffjZnXlz8GRN2WHEi55ONk7/HEZdv/tFyXpxsjhBVZHovTu+MaH0mANdGk0qpkhCiT85GitL0DoYK7sovxsFwMLd5zhfEE9k9On3XkCy9+DDhu7lKSboSOeOazyFDkzZMPCMF6XRnUzbIiZnv2s9AjbFj7PC53ojHAj6oAqBqrdH5oT43SeC1qbnE=
